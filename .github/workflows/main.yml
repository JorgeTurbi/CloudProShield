name: CI/CD â€“ CloudProSUITE (Docker on Ubuntu Server)

on:
  push:
    branches:
      - main

env:
  # Usando GHCR (GitHub Container Registry)
  IMAGE_NAME: ghcr.io/jorgeturbi/cloudproshield
  REPO_URL: "https://github.com/JorgeTurbi/CloudProShield"

jobs:
  build-and-push:
    name: Build & Push Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write   # necesario para publicar en GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short SHA
        id: set_short_sha
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: List .csproj (verificaciÃ³n rÃ¡pida)
        run: |
          echo "=== Buscando archivos .csproj ==="
          find . -name "*.csproj" -type f -exec ls -la {} \;
          echo "=== Verificando CloudShield.csproj ==="
          ls -la CloudShield.csproj || echo "CloudShield.csproj no encontrado en raÃ­z"

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore ./CloudShield.csproj

      - name: Build (Release)
        run: dotnet build ./CloudShield.csproj -c Release --no-restore

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # âœ… Login a GHCR (usa GITHUB_TOKEN automÃ¡tico)
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.set_short_sha.outputs.sha_short }}
          provenance: false

      - name: Build & Push Migrator (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.migrator
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}-migrator:latest
            ${{ env.IMAGE_NAME }}-migrator:${{ steps.set_short_sha.outputs.sha_short }}
          provenance: false

      - name: Output info
        run: |
          echo "âœ… Images pushed to GHCR:"
          echo "  - ${{ env.IMAGE_NAME }}:latest"
          echo "  - ${{ env.IMAGE_NAME }}:${{ steps.set_short_sha.outputs.sha_short }}"
          echo "  - ${{ env.IMAGE_NAME }}-migrator:latest"

  deploy:
    name: Deploy on Ubuntu (Docker Compose)
    runs-on: self-hosted
    needs: build-and-push

    permissions:
      contents: read
      packages: read

    steps:
      # Descargar solo los archivos necesarios (evita problemas de permisos)
      - name: Download deployment files
        run: |
          echo "ðŸ“¥ Descargando archivos de deployment..."
          curl -fsSL -o docker-compose.yml https://raw.githubusercontent.com/JorgeTurbi/CloudProShield/main/docker-compose.yml
          curl -fsSL -o .env https://raw.githubusercontent.com/JorgeTurbi/CloudProShield/main/.env 2>/dev/null || echo "No .env file"
          ls -la

      - name: Login to GHCR (on server)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Deploy with Docker Compose
        run: |
          docker compose pull
          docker compose up -d --remove-orphans
          docker compose ps