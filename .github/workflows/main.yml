name: CI/CD – CloudProShield (Docker on Ubuntu Server)

on:
  push:
    branches:
      - main

env:
  # Imagen fija en GHCR para este repo
  IMAGE_NAME: ghcr.io/jorgeturbi/cloudproshield
  REPO_URL: "https://github.com/JorgeTurbi/CloudProShield"

jobs:
  build-and-push:
    name: Build & Push Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write   # necesario para publicar en GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short SHA
        id: set_short_sha
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: List .csproj (verificación rápida)
        run: ls -la **/*.csproj
      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore ./CloudShield.csproj

      - name: Build (Release)
        run: dotnet build ./CloudShield.csproj -c Release --no-restore

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.set_short_sha.outputs.sha_short }}
            ${{ env.IMAGE_NAME }}:${{ steps.set_short_sha.outputs.sha_short }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
          provenance: false
      - name: Output info
        run: |
          echo "Repo:   $REPO_URL"
          echo "Image:  $IMAGE_NAME:latest"
          echo "Image:  $IMAGE_NAME:${{ steps.set_short_sha.outputs.sha_short }}"
          echo "Image:  $IMAGE_NAME:${{ steps.set_short_sha.outputs.sha_short }}"

  deploy:
    name: Deploy on Ubuntu (Docker Compose)
    runs-on: self-hosted
    needs: build-and-push

    permissions:
      packages: read

    env:
      IMAGE_NAME: ghcr.io/jorgeturbi/cloudproshield

    steps:
      - name: Checkout (opcional)
        uses: actions/checkout@v4

      - name: Login to GHCR (server)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Si tu docker-compose usa :latest, con pull+up basta
      - name: Docker Compose Pull
        run: docker compose pull

      - name: Docker Compose Up
        run: docker compose up -d --remove-orphans

      - name: Show running services
        run: |
          docker compose ps
          docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"
