# Usa SDK porque el CLI de EF requiere el SDK
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS migrator

WORKDIR /src

# 1) Copia primero el .csproj para cachear restore
COPY ["CloudShield.csproj", "./"]

# 2) Restaura dependencias
RUN dotnet restore "CloudShield.csproj"

# 3) Copia el resto del código
COPY . .

# 4) (Opcional pero acelera) Compila una vez para evitar builds repetidos
RUN dotnet build "CloudShield.csproj" -c Release

# 5) Instala EF Tools
RUN dotnet tool install --global dotnet-ef --version 9.0.0
ENV PATH="${PATH}:/root/.dotnet/tools" \
    DOTNET_CLI_TELEMETRY_OPTOUT=1 \
    DOTNET_NOLOGO=1

# 6) Variables para apuntar al proyecto de migraciones / startup y DbContext
#    - Si las migraciones están en el mismo proyecto WebApi, deja ambos en CloudShield.csproj
ENV EF_MIGRATIONS_PROJECT="CloudShield.csproj" \
    EF_STARTUP_PROJECT="CloudShield.csproj" \
    EF_CONTEXT=""

# 7) Ejecuta 'dotnet ef database update' con los parámetros configurables
#    Nota: usamos 'sh -c' para que expanda variables
ENTRYPOINT ["sh","-c","dotnet ef database update --project \"$EF_MIGRATIONS_PROJECT\" --startup-project \"$EF_STARTUP_PROJECT\" ${EF_CONTEXT:+-c $EF_CONTEXT}"]
